{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the admin API for the GoCMS app.",
        "title": "GoCMS Admin API",
        "contact": {
            "name": "Ricardo",
            "email": "ricardobenthem@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/card-schemas": {
            "get": {
                "description": "Retrieves a paginated list of card schemas.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card_schema"
                ],
                "summary": "Get list of card schemas",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination limit (0 means no limit)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.GetSchemaasResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new card schema by validating and storing the provided JSON schema and title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card_schema"
                ],
                "summary": "Add a new card schema",
                "parameters": [
                    {
                        "description": "Card schema to add",
                        "name": "schema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.AddCardSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.CardIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or schema",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a card schema by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card_schema"
                ],
                "summary": "Delete a card schema",
                "parameters": [
                    {
                        "description": "ID of the card schema to delete",
                        "name": "schema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.DeleteSchemaBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted schema ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or deletion error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/card-schemas/{id}": {
            "get": {
                "description": "Retrieves a card schema by its UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card_schema"
                ],
                "summary": "Get a card schema by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card schema UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.CardSchema"
                        }
                    },
                    "400": {
                        "description": "Invalid schema ID",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Schema not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cards": {
            "put": {
                "description": "Updates an existing card with new data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Update an existing card",
                "parameters": [
                    {
                        "description": "Card data to update",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.ChangeCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.CardIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or could not change card",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new post to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Add a new post",
                "parameters": [
                    {
                        "description": "Post to add",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.AddCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.CardIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing data",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a card by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Delete a card",
                "parameters": [
                    {
                        "description": "Card ID to delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.DeletePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PostIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID provided",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Card not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cards/{schema}": {
            "get": {
                "description": "Retrieves a paginated list of cards by schema UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get a card list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "schema UUID",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.GetCardRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/images": {
            "post": {
                "description": "Uploads an image file, saves it, and creates minified versions.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload a new image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The image file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "A brief description of the image",
                        "name": "excerpt",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.ImageIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input, file type, or size",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while saving file",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/images/{name}": {
            "delete": {
                "description": "Deletes an image file from the server by its filename.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Delete an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image filename to delete",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.ImageIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing filename",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "description": "Retrieves a paginated list of pages.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Get a list of pages",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination limit (0 means no limit)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pages",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid offset or limit parameter",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing page with new data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Update an existing page",
                "parameters": [
                    {
                        "description": "Page data to update",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.ChangePageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PostIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or could not change page",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new page to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Add a new page",
                "parameters": [
                    {
                        "description": "Page to add",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.AddPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or data",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pages/{link}": {
            "delete": {
                "description": "Deletes a page by its Link.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Delete a page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page Link",
                        "name": "link",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.DeletePageRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid link provided",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Retrieves a paginated list of posts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get a list of posts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit for pagination. 0 means no limit.",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.GetPostsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid offset or limit parameter",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing post with new data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update an existing post",
                "parameters": [
                    {
                        "description": "Post data to update",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.ChangePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PostIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or could not change post",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new post to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Add a new post",
                "parameters": [
                    {
                        "description": "Post to add",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.AddPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PostIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing data",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a post by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete a post",
                "parameters": [
                    {
                        "description": "Post ID to delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_app.DeletePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.PostIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID provided",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "Retrieves a single post by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get a single post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_app.GetPostResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_app.AddCardRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Content data of the card\nin: body",
                    "type": "string"
                },
                "image_location": {
                    "description": "Image location URL\nin: body",
                    "type": "string"
                },
                "schema": {
                    "description": "Schema name\nin: body",
                    "type": "string"
                }
            }
        },
        "admin_app.AddCardSchemaRequest": {
            "type": "object",
            "properties": {
                "schema": {
                    "description": "JSON schema string\nin: body\nrequired: true",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the card schema\nin: body\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.AddPageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the page\nin: body",
                    "type": "string"
                },
                "link": {
                    "description": "Link of the page\nin: body",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the page\nin: body\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.AddPostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the post\nin: body",
                    "type": "string"
                },
                "excerpt": {
                    "description": "Excerpt of the post\nin: body",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the post\nin: body\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.CardIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the card",
                    "type": "string"
                }
            }
        },
        "admin_app.ChangeCardRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the card\nin: body",
                    "type": "string"
                },
                "image_location": {
                    "description": "Image location URL\nin: body",
                    "type": "string"
                },
                "json_data": {
                    "description": "JSON data of the card\nin: body",
                    "type": "string"
                },
                "json_schema": {
                    "description": "JSON schema name\nin: body",
                    "type": "string"
                }
            }
        },
        "admin_app.ChangePageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the page\nin: body",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the page\nin: body\nrequired: true",
                    "type": "integer"
                },
                "link": {
                    "description": "Link of the page\nin: body",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the page\nin: body",
                    "type": "string"
                }
            }
        },
        "admin_app.ChangePostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the post\nin: body",
                    "type": "string"
                },
                "excerpt": {
                    "description": "Excerpt of the post\nin: body",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the post\nin: body\nrequired: true",
                    "type": "integer"
                },
                "title": {
                    "description": "Title of the post\nin: body",
                    "type": "string"
                }
            }
        },
        "admin_app.DeletePageRequest": {
            "type": "object",
            "properties": {
                "link": {
                    "description": "Link of the page to delete\nin: body\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.DeletePostRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "admin_app.DeleteSchemaBinding": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "UUID of the schema to delete\nin: path\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.GetCardRequest": {
            "type": "object",
            "required": [
                "schema"
            ],
            "properties": {
                "limit": {
                    "description": "Limit number of cards to return\nin: query",
                    "type": "integer"
                },
                "page": {
                    "description": "Page number for pagination\nin: query",
                    "type": "integer"
                },
                "schema": {
                    "description": "Schema name to filter cards\nin: path\nrequired: true",
                    "type": "string"
                }
            }
        },
        "admin_app.GetPostResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the post",
                    "type": "string"
                },
                "excerpt": {
                    "description": "Excerpt of the post",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the post",
                    "type": "integer"
                },
                "title": {
                    "description": "Title of the post",
                    "type": "string"
                }
            }
        },
        "admin_app.GetPostsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "description": "List of posts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Post"
                    }
                }
            }
        },
        "admin_app.GetSchemaasResponse": {
            "type": "object",
            "properties": {
                "schemas": {
                    "description": "List of card schemas",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.CardSchema"
                    }
                }
            }
        },
        "admin_app.ImageIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the image",
                    "type": "string"
                }
            }
        },
        "admin_app.PageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the page",
                    "type": "integer"
                },
                "link": {
                    "description": "Link of the page",
                    "type": "string"
                }
            }
        },
        "admin_app.PostIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the post",
                    "type": "integer"
                }
            }
        },
        "common.CardSchema": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schema": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "common.Post": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}